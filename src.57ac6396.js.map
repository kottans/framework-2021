{"version":3,"sources":["utils.js","framework/hooks.js","framework/element.js","framework/render.js","framework/index.js","data/openWeatherMapAPI.js","customHooks.js","components/SearchByCity.js","data/weatherData.js","components/UnitSwitch.js","components/WeatherForecastItem.js","components/WeatherToday.js","components/WeatherForecast.js","components/WeatherResults.js","components/App.js","index.js"],"names":["KELVIN_UNITS","CELSIUS_UNITS","FAHRENHEIT_UNITS","displayInUnits","value","units","Math","round","getWeatherFormattedDate","dt","date","Date","Intl","DateTimeFormat","undefined","weekday","month","day","format","getWeatherFormattedTime","hour","minute","getDateTimeFromUnixTimestamp","isFunction","func","current","shouldReRender","wipComponent","hookIndex","createFunctionElement","tag","props","children","hooks","useState","initial","oldHook","hook","state","queue","forEach","action","push","useEffect","effect","deps","oldDeps","hasChanged","hasDepsChanged","unmount","window","removeEventListener","addEventListener","prevDeps","nextDeps","length","some","dep","index","createElement","element","DocumentFragment","document","Object","entries","name","startsWith","toLowerCase","substr","includes","removeAttribute","setAttribute","e","console","error","child","appendChild","parent","Array","isArray","subChild","nodeType","createTextNode","toString","createFragment","render","timer","Component","target","requestAnimationFrame","workLoop","replaceChildren","cancelAnimationFrame","getOpenWeatherMapUrl","cityName","dataStorage","loadOpenWeatherMapData","currentCity","currentCityData","url","fetch","then","response","result","json","getIconPropertiesFromCode","iconCode","src","width","height","alt","getAdaptedWeatherData","currentUnits","main","feels_like","temp","weather","description","icon","formattedDate","formattedTime","dateTime","feelsLikeInUnits","tempInUnits","weatherIconProps","useWeather","setCurrentCity","setError","isLoading","setIsLoading","weatherData","setWeatherData","data","message","code","Error","catch","finally","SearchByCity","onChange","event","getFilteredByDateWeatherData","weatherDataList","includeDatesAfterBase","includeBaseDate","baseDate","baseDateDay","getDate","filter","itemDate","itemDateDay","isToday","UnitSwitch","UNITS","id","setCurrentUnits","map","WeatherForecastItem","shouldShowDate","shouldShowTime","WeatherToday","item","WeatherForecast","WeatherResults","list","weatherTodayData","weatherForecastData","App","module","hot","accept","getElementById"],"mappings":"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","file":"src.57ac6396.js","sourceRoot":"..\\src","sourcesContent":["export const KELVIN_UNITS = 'K';\nexport const CELSIUS_UNITS = 'C';\nexport const FAHRENHEIT_UNITS = 'F';\n\nexport function displayInUnits(value, units) {\n  switch (units) {\n    case CELSIUS_UNITS:\n      return `${Math.round(value - 273.15)}˚C`;\n    case FAHRENHEIT_UNITS:\n      return `${Math.round((value - 273.15) * (9 / 5) + 32)}˚F`;\n    // case KELVIN_UNITS:\n    default:\n      return `${value}˚K`;\n  }\n}\n\nexport function getWeatherFormattedDate(dt) {\n  const date = new Date(dt * 1000);\n  const formatOptions = {\n    weekday: 'long',\n    month: 'long',\n    day: 'numeric',\n  };\n  return new Intl.DateTimeFormat(undefined, formatOptions).format(date);\n}\n\nexport function getWeatherFormattedTime(dt) {\n  const date = new Date(dt * 1000);\n  const formatOptions = {\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n  return new Intl.DateTimeFormat(undefined, formatOptions).format(date);\n}\n\nexport function getDateTimeFromUnixTimestamp(dt) {\n  const date = new Date(dt * 1000);\n  const formatOptions = {\n    month: 'long',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  };\n  return new Intl.DateTimeFormat('en-GB', formatOptions).format(date);\n}\n\nexport const isFunction = func => typeof func === 'function';\n","import { isFunction } from '../utils';\n\nexport const current = {\n  shouldReRender: true,\n  wipComponent: null,\n  hookIndex: null,\n};\n\nexport function createFunctionElement(tag, props, children) {\n  current.wipComponent = tag;\n  current.hookIndex = 0;\n  current.wipComponent.hooks = current.wipComponent.hooks || [];\n\n  return tag({ ...props, children }, children);\n}\n\nexport function useState(initial) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const hook = {\n    state: oldHook ? oldHook.state : initial,\n    queue: [],\n  };\n\n  const actions = oldHook ? oldHook.queue : [];\n\n  actions.forEach(action => {\n    hook.state = isFunction(action) ? action(hook.state) : action;\n  });\n\n  const setState = action => {\n    current.shouldReRender = true;\n    hook.queue.push(action);\n  };\n\n  wipComponent.hooks[hookIndex] = hook;\n  current.hookIndex++;\n  return [hook.state, setState];\n}\n\nexport function useEffect(effect, deps) {\n  const { wipComponent, hookIndex } = current;\n  const oldHook = wipComponent.hooks[hookIndex];\n  const oldDeps = oldHook ? oldHook.deps : undefined;\n\n  const hasChanged = hasDepsChanged(oldDeps, deps);\n\n  current.hookIndex++;\n\n  if (!hasChanged) return;\n\n  if (oldHook && oldHook.unmount) {\n    window.removeEventListener('beforeunload', oldHook.unmount);\n  }\n\n  wipComponent.hooks[hookIndex] = {\n    unmount: effect(),\n    deps,\n  };\n\n  window.addEventListener('beforeunload', wipComponent.hooks[hookIndex].unmount);\n}\n\nconst hasDepsChanged = (prevDeps, nextDeps) =>\n  !prevDeps ||\n  !nextDeps ||\n  prevDeps.length !== nextDeps.length ||\n  prevDeps.some((dep, index) => dep !== nextDeps[index]);\n","/**\n * Creates DOM Node. Implements jsx-parser's createElement API\n * @param {string|Function} tag - HTML tag as string or Component function\n * @param {object} props - element properties as parsed by jsx-parser\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment|Element}\n */\nimport { createFunctionElement } from './hooks';\nimport { isFunction } from '../utils';\n\nexport const createElement = (tag, props, ...children) => {\n  if (isFunction(tag)) {\n    /*\n      Passing children as the 2nd argument is required as jsx transformer puts component functions\n      and regular tags in wrapper functions that expect children as the 2nd param\n     */\n    return createFunctionElement(tag, props, children);\n  }\n  const element = tag === '' ? new DocumentFragment() : document.createElement(tag);\n  Object.entries(props || {}).forEach(([name, value]) => {\n    if (name.startsWith('on') && name.toLowerCase() in window) {\n      element.addEventListener(\n        name.toLowerCase().substr(2),\n        /** @type {Function} */\n        value,\n      );\n    } else {\n      try {\n        if (!(element instanceof DocumentFragment)) {\n          // Boolean attributes are considered to be true if they're present on the element at all, regardless of their actual value\n          // https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute#example\n          if (['disabled', 'checked'].includes(name) && !value) {\n            element.removeAttribute(name);\n          } else {\n            element.setAttribute(name, value);\n          }\n        }\n      } catch (e) {\n        console.error('createElement caught', e, 'on', element);\n      }\n    }\n  });\n\n  children.forEach(child => appendChild(element, child));\n\n  return element;\n};\n\n/**\n * Appends child elements from an unbound array of children, recursively\n * @param {Node} parent\n * @param {Node|[Node]} child\n */\nconst appendChild = (parent, child) => {\n  if (Array.isArray(child)) {\n    child.forEach(subChild => appendChild(parent, subChild));\n  } else {\n    // Skip null and undefined\n    if (child != null) {\n      parent.appendChild(child.nodeType ? child : document.createTextNode(child.toString()));\n    }\n  }\n};\n\n/**\n * Creates Fragment. Implements jsx-parser's createFragment API\n * @param {object} props - effectively a placeholder, fragment never has any properties\n * @param {Node[]} children - child elements\n * @returns {DocumentFragment}\n */\nexport const createFragment = (props, ...children) => createElement('', props, ...children);\n","/** @jsx createElement */\n/*** @jsxFrag createFragment */\nimport { createElement } from './element';\nimport { current } from './hooks';\n\n/**\n * Renders a component and attaches it to the target DOM element\n * @param Component - function\n * @param target - DOM element to attach component to\n */\n\nlet timer;\n\nexport function render(Component, target) {\n  function workLoop() {\n    if (current.shouldReRender) {\n      current.shouldReRender = false;\n      target.replaceChildren(<Component />);\n    }\n\n    cancelAnimationFrame(timer);\n    timer = requestAnimationFrame(workLoop);\n  }\n  timer = requestAnimationFrame(workLoop);\n}\n\nexport default render;\n","import { createElement, createFragment } from './element';\nimport { render } from './render';\nimport { useState, useEffect } from './hooks';\n\nexport { createElement, createFragment } from './element';\nexport { render } from './render';\nexport { useState, useEffect } from './hooks';\n\nexport default {\n  createElement,\n  createFragment,\n  useState,\n  useEffect,\n  render,\n};\n","import {\n  displayInUnits,\n  getDateTimeFromUnixTimestamp,\n  getWeatherFormattedDate,\n  getWeatherFormattedTime,\n} from '../utils';\n\nexport function getOpenWeatherMapUrl(cityName) {\n  return `https://api.openweathermap.org/data/2.5/forecast?q=${cityName}&appid=${process.env.OPEN_WEATHER_MAP_API_KEY}`;\n}\n\nconst dataStorage = {};\n\nexport function loadOpenWeatherMapData(currentCity) {\n  const currentCityData = dataStorage[currentCity];\n\n  if (currentCityData) return currentCityData;\n\n  const url = getOpenWeatherMapUrl(currentCity);\n\n  return fetch(url).then(response => {\n    const result = response.json();\n    dataStorage[currentCity] = result;\n    return result;\n  });\n}\n\nexport function getIconPropertiesFromCode(iconCode) {\n  return {\n    src: `http://openweathermap.org/img/wn/${iconCode}@2x.png`,\n    width: '30px',\n    height: '30px',\n    alt: 'weather icon',\n  };\n}\n\nexport function getAdaptedWeatherData(\n  { dt, main: { feels_like, temp }, weather: [{ main, description, icon }] },\n  currentUnits,\n) {\n  return {\n    formattedDate: getWeatherFormattedDate(dt),\n    formattedTime: getWeatherFormattedTime(dt),\n    dateTime: getDateTimeFromUnixTimestamp(dt),\n    description,\n    feelsLikeInUnits: displayInUnits(feels_like, currentUnits),\n    main,\n    tempInUnits: displayInUnits(temp, currentUnits),\n    weatherIconProps: getIconPropertiesFromCode(icon),\n  };\n}\n","import { useEffect, useState } from './framework';\nimport { loadOpenWeatherMapData } from './data/openWeatherMapAPI';\n\nexport const useWeather = () => {\n  const [currentCity, setCurrentCity] = useState('');\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [weatherData, setWeatherData] = useState({});\n\n  useEffect(() => {\n    if (currentCity) {\n      loadOpenWeatherMapData(currentCity)\n        .then(data => {\n          const { message, code } = data;\n\n          if (code !== '200' && message) throw Error(message);\n\n          setError(null);\n          setWeatherData(data);\n        })\n        .catch(setError)\n        .finally(() => setIsLoading(false));\n    }\n  }, [currentCity]);\n\n  return {\n    currentCity,\n    setCurrentCity,\n    error,\n    isLoading,\n    weatherData,\n  };\n};\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement } from '../framework';\n\nfunction SearchByCity({ value, onChange }) {\n  return <input type=\"text\" value={value} onChange={event => onChange(event.target.value)} />;\n}\n\nexport default SearchByCity;\n","export function getFilteredByDateWeatherData(\n  weatherDataList = [],\n  { includeDatesAfterBase = false, includeBaseDate = false, baseDate = new Date() },\n) {\n  const baseDateDay = baseDate.getDate();\n  return weatherDataList.filter(({ dt }) => {\n    const itemDate = new Date(dt * 1000);\n\n    const itemDateDay = itemDate.getDate();\n    const isToday = baseDateDay === itemDateDay;\n    if (includeBaseDate && isToday) {\n      return true;\n    }\n\n    return includeDatesAfterBase && baseDate < itemDate && !isToday;\n  });\n}\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\nimport { CELSIUS_UNITS, FAHRENHEIT_UNITS, KELVIN_UNITS } from '../utils';\n\nconst UNITS = [\n  { id: 'celsius-units', value: CELSIUS_UNITS, name: 'C' },\n  { id: 'fahrenheit-units', value: FAHRENHEIT_UNITS, name: 'F' },\n  { id: 'kelvin-units', value: KELVIN_UNITS, name: 'K' },\n];\n\nfunction UnitSwitch({ currentUnits, setCurrentUnits }) {\n  return (\n    <>\n      <p>Select units</p>\n      {UNITS.map(({ id, value, name }) => (\n        <div>\n          <input\n            type=\"radio\"\n            id={id}\n            name=\"temperature-units\"\n            value={value}\n            checked={currentUnits === value}\n            onChange={event => setCurrentUnits(event.target.value)}\n          />\n          <label For={id}>˚{name}</label>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default UnitSwitch;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\n\nfunction WeatherForecastItem({\n  description,\n  formattedTime,\n  formattedDate,\n  main,\n  tempInUnits,\n  feelsLikeInUnits,\n  weatherIconProps,\n  shouldShowDate = false,\n  shouldShowTime = false,\n}) {\n  let dateTime = '';\n  if (shouldShowDate) {\n    dateTime = <>For {formattedDate}, </>;\n  }\n  if (shouldShowTime) {\n    dateTime = <>At {formattedTime} </>;\n  }\n  if (shouldShowDate && shouldShowTime) {\n    dateTime = (\n      <>\n        For {formattedDate}, {formattedTime}{' '}\n      </>\n    );\n  }\n\n  return (\n    <div>\n      {dateTime} <img alt={main} {...weatherIconProps} /> {main} ({description}). Temperature is{' '}\n      {tempInUnits}, feels like {feelsLikeInUnits}\n    </div>\n  );\n}\n\nexport default WeatherForecastItem;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { getAdaptedWeatherData } from '../data/openWeatherMapAPI';\nimport WeatherForecastItem from './WeatherForecastItem';\n\nfunction WeatherToday({ weatherData, currentUnits, currentCity }) {\n  if (!weatherData) return null;\n\n  return (\n    <>\n      <div>Weather for today in {currentCity}:</div>\n      {weatherData.map(item => (\n        <WeatherForecastItem {...getAdaptedWeatherData(item, currentUnits)} shouldShowTime={true} />\n      ))}\n    </>\n  );\n}\n\nexport default WeatherToday;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework/element';\nimport { getAdaptedWeatherData } from '../data/openWeatherMapAPI';\nimport WeatherForecastItem from './WeatherForecastItem';\n\nfunction WeatherForecast({ weatherData, currentUnits, currentCity }) {\n  return (\n    <>\n      <div>Weather forecast for {currentCity}:</div>\n      {weatherData.map(item => (\n        <WeatherForecastItem\n          {...getAdaptedWeatherData(item, currentUnits)}\n          shouldShowDate={true}\n          shouldShowTime={true}\n        />\n      ))}\n    </>\n  );\n}\n\nexport default WeatherForecast;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment, useState } from '../framework';\nimport { getFilteredByDateWeatherData } from '../data/weatherData';\nimport UnitSwitch from './UnitSwitch';\nimport { CELSIUS_UNITS } from '../utils';\nimport WeatherToday from './WeatherToday';\nimport WeatherForecast from './WeatherForecast';\n\nfunction WeatherResults({ isLoading, error, currentCity, weatherData: { list } }) {\n  const [currentUnits, setCurrentUnits] = useState(CELSIUS_UNITS);\n\n  if (!currentCity) {\n    return <div>Search by city name</div>;\n  }\n\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  const weatherTodayData = getFilteredByDateWeatherData(list, { includeBaseDate: true });\n  const weatherForecastData = getFilteredByDateWeatherData(list, {\n    includeDatesAfterBase: true,\n  });\n  return (\n    <>\n      <UnitSwitch currentUnits={currentUnits} setCurrentUnits={setCurrentUnits} />\n      <br />\n      <WeatherToday\n        currentUnits={currentUnits}\n        currentCity={currentCity}\n        weatherData={weatherTodayData}\n      />\n      <br />\n      <br />\n      <WeatherForecast\n        currentUnits={currentUnits}\n        currentCity={currentCity}\n        weatherData={weatherForecastData}\n      />\n    </>\n  );\n}\n\nexport default WeatherResults;\n","/** @jsx createElement */\n/** @jsxFrag createFragment */\nimport { createElement, createFragment } from '../framework';\nimport { useWeather } from '../customHooks';\nimport SearchByCity from './SearchByCity';\nimport WeatherResults from './WeatherResults';\n\nfunction App() {\n  const { currentCity, setCurrentCity, error, isLoading, weatherData } = useWeather();\n  return (\n    <>\n      <SearchByCity value={currentCity} onChange={setCurrentCity} />\n      <WeatherResults\n        currentCity={currentCity}\n        error={error}\n        isLoading={isLoading}\n        weatherData={weatherData}\n      />\n    </>\n  );\n}\n\nexport default App;\n","import { render } from './framework';\nimport App from './components/App';\n\nif (module.hot) {\n  module.hot.accept();\n}\n\n// pass a component function itself so that `render` could invoke it as needed\nrender(App, document.getElementById('app-root'));\n"]}